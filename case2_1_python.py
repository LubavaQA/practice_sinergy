
import datetime
from datetime import date

def is_leap_year(year):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≥–æ–¥ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–º"""
    return (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0)

def get_weekday(day, month, year):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–π –¥–∞—Ç—ã"""
    days = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
    return days[datetime.date(year, month, day).weekday()]

def calculate_age(day, month, year):
    """–í—ã—á–∏—Å–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    today = date.today()
    age = today.year - year
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É–∂–µ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –≥–æ–¥—É
    if (month, day) > (today.month, today.day):
        age -= 1
    
    return age

def print_digital_date(day, month, year):
    """–í—ã–≤–æ–¥–∏—Ç –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ —Ç–∞–±–ª–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–≤—ë–∑–¥–æ—á–µ–∫"""
    # –®–∞–±–ª–æ–Ω—ã —Ü–∏—Ñ—Ä –¥–ª—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ —Ç–∞–±–ª–æ (5x3)
    digits = {
        '0': ["***", "* *", "* *", "* *", "***"],
        '1': ["  *", "  *", "  *", "  *", "  *"],
        '2': ["***", "  *", "***", "*  ", "***"],
        '3': ["***", "  *", "***", "  *", "***"],
        '4': ["* *", "* *", "***", "  *", "  *"],
        '5': ["***", "*  ", "***", "  *", "***"],
        '6': ["***", "*  ", "***", "* *", "***"],
        '7': ["***", "  *", "  *", "  *", "  *"],
        '8': ["***", "* *", "***", "* *", "***"],
        '9': ["***", "* *", "***", "  *", "***"],
        ' ': ["   ", "   ", "   ", "   ", "   "]
    }
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∫–∞–∫ "–¥–¥ –º–º –≥–≥–≥–≥"
    date_str = f"{day:02d} {month:02d} {year}"
    
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ –≤—ã–≤–æ–¥–∞
    lines = [""] * 5
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É –≤—ã–≤–æ–¥–∞
    for char in date_str:
        digit_pattern = digits[char]
        for i in range(5):
            lines[i] += digit_pattern[i] + " "
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n–î–∞—Ç–∞ –≤–∞—à–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:")
    for line in lines:
        print(line)

def get_valid_date():
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è"""
    today = date.today()
    
    while True:
        try:
            year = int(input("–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è: "))
            if year < 1900 or year > today.year:
                print(f"–û—à–∏–±–∫–∞: –≥–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1900 –¥–æ {today.year}")
                continue
                
            month = int(input("–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—Ü —Ä–æ–∂–¥–µ–Ω–∏—è (1-12): "))
            if month < 1 or month > 12:
                print("–û—à–∏–±–∫–∞: –º–µ—Å—è—Ü –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 12")
                continue
                
            day = int(input("–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: "))
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
            try:
                birth_date = datetime.date(year, month, day)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –Ω–µ –≤ –±—É–¥—É—â–µ–º
                if birth_date > today:
                    print("–û—à–∏–±–∫–∞: –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º")
                    continue
                    
                return day, month, year
                
            except ValueError as e:
                print(f"–û—à–∏–±–∫–∞: —Ç–∞–∫–æ–π –¥–∞—Ç—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - {e}")
                continue
                
        except ValueError:
            print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")

def main():
    print("=== –í–í–û–î –î–ê–¢–´ –†–û–ñ–î–ï–ù–ò–Ø ===")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–∞–ª–∏–¥–Ω—É—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è
    day, month, year = get_valid_date()
    
    # –í—ã—á–∏—Å–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    weekday = get_weekday(day, month, year)
    leap_year = is_leap_year(year)
    age = calculate_age(day, month, year)
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f"\nüìÖ –î–∞—Ç–∞ –≤–∞—à–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è: {day:02d}.{month:02d}.{year}")
    print(f"üìÖ –í—ã —Ä–æ–¥–∏–ª–∏—Å—å –≤ {weekday.lower()}")
    print(f"üìÖ {year} –≥–æ–¥ –±—ã–ª {'–≤–∏—Å–æ–∫–æ—Å–Ω—ã–º' if leap_year else '–Ω–µ–≤–∏—Å–æ–∫–æ—Å–Ω—ã–º'}")
    print(f"üéÇ –í–∞–º —Å–µ–π—á–∞—Å {age} –ª–µ—Ç")
    
    # –í—ã–≤–æ–¥–∏–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ —Ç–∞–±–ª–æ
    print_digital_date(day, month, year)

if __name__ == "__main__":
    main()
